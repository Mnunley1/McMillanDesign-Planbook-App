import {
  Box,
  Button,
  Flex,
  HStack,
  SimpleGrid,
  Spacer,
} from "@chakra-ui/react";
import algoliasearch from "algoliasearch/lite";
import Head from "next/head";
import { withRouter } from "next/router";
import { useState } from "react";
import { InstantSearch, Stats } from "react-instantsearch";
import { createInstantSearchRouterNext } from 'react-instantsearch-router-nextjs';
import CustomHits from "../components/CustomHits";
import CustomPagination from "../components/CustomPagination";
import CustomSortBy from "../components/CustomSortBy";
import Layout from "../components/Layout";
import MobileFilters from "../components/MobileFilters";
import Sidebar from "../components/Sidebar";

const searchClient = algoliasearch(
  process.env.NEXT_PUBLIC_ALGOLIA_APP_ID,
  process.env.NEXT_PUBLIC_ALGOLIA_SEARCH_KEY
);

function Home({ router }) {
  const [showFilters, setShowFilters] = useState(false);

  const routing = {
    router: createInstantSearchRouterNext({
      serverUrl: 'https://your-website.com',
      routerOptions: {
        shallow: true,
      },
      singletonRouter: router,
      cleanUrlOnDispose: false, // Adopt the next major version behavior
    }),
  };

  const displayFilters = () => {
    setShowFilters(true);
  };

  const hideFilters = () => {
    setShowFilters(false);
  };

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <InstantSearch
        searchClient={searchClient}
        indexName="floorPlans"
        routing={routing}
        stalledSearchDelay={500}
      >
        <Layout>
          <Flex overflowX="hidden">
            <Box
              bgColor="#1e1e1e"
              minWidth="30%"
              height="100%"
              p="5"
              m="5"
              borderRadius="lg"
              display={["none", "none", "block"]}
            >
              <Sidebar />
            </Box>
            <Box w="100%" h="100%" p={5}>
              <HStack mb="5" color="white">
                <Stats
                  translations={{
                    stats(nbHits) {
                      return `${nbHits} results found`;
                    },
                  }}
                />

                <Spacer />
                <Button
                  onClick={displayFilters}
                  display={["block", "block", "none"]}
                  variant="link"
                  colorScheme="yellow"
                >
                  Filters
                </Button>
                <CustomSortBy
                  items={[
                    { label: "Default", value: "floorPlans" },
                    {
                      label: "Bedrooms (asc)",
                      value: "floorPlans_bedrooms_asc",
                    },
                    {
                      label: "Bedrooms (desc)",
                      value: "floorPlans_bedrooms_desc",
                    },
                    {
                      label: "Plan Width (asc)",
                      value: "floorPlans_width_asc",
                    },
                    {
                      label: "Plan Width (desc)",
                      value: "floorPlans_width_desc",
                    },
                    {
                      label: "Plan Depth (asc)",
                      value: "floorPlans_depth_asc",
                    },
                    {
                      label: "Plan Depth (desc)",
                      value: "floorPlans_depth_desc",
                    },
                  ]}
                />
              </HStack>
              <SimpleGrid columns={[1, 1, 1, 2]} spacing={5}>
                <CustomHits />
              </SimpleGrid>
              <CustomPagination padding={2} />
            </Box>
            <MobileFilters
              onClick={hideFilters}
              setDisplay={setShowFilters}
              filters={showFilters}
            />
          </Flex>
        </Layout>
      </InstantSearch>
    </>
  );
}

export default withRouter(Home);
